/* This file was generated by SableCC (http://www.sablecc.org/). */

package tony.parser;

import tony.node.*;
import tony.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTStar(TStar node)
    {
        index = 0;
    }

    public void caseTGreater(TGreater node)
    {
        index = 1;
    }

    public void caseTString(TString node)
    {
        index = 2;
    }

    public void caseTInt(TInt node)
    {
        index = 3;
    }

    public void caseTBool(TBool node)
    {
        index = 4;
    }

    public void caseTChar(TChar node)
    {
        index = 5;
    }

    public void caseTDef(TDef node)
    {
        index = 6;
    }

    public void caseTAnd(TAnd node)
    {
        index = 7;
    }

    public void caseTElse(TElse node)
    {
        index = 8;
    }

    public void caseTElsif(TElsif node)
    {
        index = 9;
    }

    public void caseTEnd(TEnd node)
    {
        index = 10;
    }

    public void caseTExit(TExit node)
    {
        index = 11;
    }

    public void caseTFalse(TFalse node)
    {
        index = 12;
    }

    public void caseTFor(TFor node)
    {
        index = 13;
    }

    public void caseTHead(THead node)
    {
        index = 14;
    }

    public void caseTIf(TIf node)
    {
        index = 15;
    }

    public void caseTList(TList node)
    {
        index = 16;
    }

    public void caseTMod(TMod node)
    {
        index = 17;
    }

    public void caseTNew(TNew node)
    {
        index = 18;
    }

    public void caseTNil(TNil node)
    {
        index = 19;
    }

    public void caseTNilQuestionMark(TNilQuestionMark node)
    {
        index = 20;
    }

    public void caseTNot(TNot node)
    {
        index = 21;
    }

    public void caseTOr(TOr node)
    {
        index = 22;
    }

    public void caseTRef(TRef node)
    {
        index = 23;
    }

    public void caseTReturn(TReturn node)
    {
        index = 24;
    }

    public void caseTSkip(TSkip node)
    {
        index = 25;
    }

    public void caseTTail(TTail node)
    {
        index = 26;
    }

    public void caseTTrue(TTrue node)
    {
        index = 27;
    }

    public void caseTDecl(TDecl node)
    {
        index = 28;
    }

    public void caseTDiv(TDiv node)
    {
        index = 29;
    }

    public void caseTSharp(TSharp node)
    {
        index = 30;
    }

    public void caseTSmallerEqual(TSmallerEqual node)
    {
        index = 31;
    }

    public void caseTBiggerEqual(TBiggerEqual node)
    {
        index = 32;
    }

    public void caseTEqual(TEqual node)
    {
        index = 33;
    }

    public void caseTLPar(TLPar node)
    {
        index = 34;
    }

    public void caseTRPar(TRPar node)
    {
        index = 35;
    }

    public void caseTLBr(TLBr node)
    {
        index = 36;
    }

    public void caseTRBr(TRBr node)
    {
        index = 37;
    }

    public void caseTComma(TComma node)
    {
        index = 38;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 39;
    }

    public void caseTColon(TColon node)
    {
        index = 40;
    }

    public void caseTAssign(TAssign node)
    {
        index = 41;
    }

    public void caseTPlus(TPlus node)
    {
        index = 42;
    }

    public void caseTMinus(TMinus node)
    {
        index = 43;
    }

    public void caseTConstChar(TConstChar node)
    {
        index = 44;
    }

    public void caseTConstInt(TConstInt node)
    {
        index = 45;
    }

    public void caseTId(TId node)
    {
        index = 46;
    }

    public void caseTMul(TMul node)
    {
        index = 47;
    }

    public void caseTNotEqual(TNotEqual node)
    {
        index = 48;
    }

    public void caseTSmaller(TSmaller node)
    {
        index = 49;
    }

    public void caseTBigger(TBigger node)
    {
        index = 50;
    }

    public void caseEOF(EOF node)
    {
        index = 51;
    }
}
